services:
  server:
    container_name: taleswiki-server
    image: openmpy/taleswiki-server:${GITHUB_SHA}
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./logs:/logs
    depends_on:
      - redis
      - meilisearch
    networks:
      - monitoring

  redis:
    container_name: redis
    image: redis:7.4.2
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    networks:
      - monitoring

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - server
    networks:
      - monitoring

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: unless-stopped
    ports:
      - "3001:3000"
    volumes:
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/dashboards:/etc/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_ADMIN_PASSWORD}
    depends_on:
      - prometheus
    networks:
      - monitoring

  loki:
    container_name: loki
    image: grafana/loki:latest
    restart: unless-stopped
    ports:
      - "3100:3100"
    networks:
      - monitoring

  promtail:
    container_name: promtail
    image: grafana/promtail:latest
    restart: unless-stopped
    volumes:
      - ./monitoring/promtail/promtail-config.yaml:/etc/promtail/config.yaml
      - ./logs:/logs
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki
    networks:
      - monitoring

  meilisearch:
    image: getmeili/meilisearch:v1.15
    container_name: meilisearch
    ports:
      - "7700:7700"
    environment:
      MEILI_MASTER_KEY: ${MS_MASTER_KEY}
    volumes:
      - ./meili_data:/meili_data
    restart: unless-stopped
    networks:
      - monitoring

volumes:
  redis:

networks:
  monitoring:
