name: Deploy Server to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Create application-prod.yml
        run: |
          cd ./server/src/main/resources
          touch ./application-prod.yml
          echo "${{ secrets.APPLICATION_PROD }}" > ./application-prod.yml
        shell: bash

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./server/gradlew

      - name: Build Spring Boot JAR
        run: |
          cd ./server
          ./gradlew clean build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/taleswiki-server:${{ github.sha }}
          build-args: |
            JAR_FILE=build/libs/app.jar

      - name: Copy files to EC2
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_SSH_USER }}
          key: ${{ secrets.EC2_SSH_PASSWORD }}
          source: "server/compose.yml,server/monitoring"
          target: "/home/taleswiki"

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_SSH_USER }}
          key: ${{ secrets.EC2_SSH_PASSWORD }}
          script: |
            cd /home/taleswiki/server
            export GITHUB_SHA=${{ github.sha }}
            export GF_ADMIN_USER=${{ secrets.GF_ADMIN_USER }}
            export GF_ADMIN_PASSWORD=${{ secrets.GF_ADMIN_PASSWORD }}
            export MS_MASTER_KEY=${{ secrets.MS_MASTER_KEY }}
            docker compose down || true
            docker compose up -d || exit 1
            docker image prune -f
